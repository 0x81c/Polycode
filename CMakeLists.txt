CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(PolyCode)

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Debug")
#   SET(CMAKE_BUILD_TYPE "Release")
ENDIF(NOT CMAKE_BUILD_TYPE)

OPTION(POLYCODE_BUILD_SHARED "Build Polycode shared libraries" ON)
OPTION(POLYCODE_BUILD_STATIC "Build Polycode static libraries" OFF)
OPTION(POLYCODE_BUILD_BINDINGS "Build Polycode Lua bindings" ON)
OPTION(POLYCODE_BUILD_EXAMPLES "Build Polycode examples" OFF)
OPTION(POLYCODE_BUILD_MODULES "Build Polycode modules" OFF)
OPTION(POLYCODE_BUILD_TOOLS "Build Polycode tools" OFF)

# Some non-standard CMake modules
SET(CMAKE_MODULE_PATH ${PolyCode_SOURCE_DIR}/Core/Build/CMake ${CMAKE_MODULE_PATH})

IF(WIN32)
    SET(CMAKE_PREFIX_PATH ${PolyCode_SOURCE_DIR}/Release/Win/Framework/Dependencies)
ENDIF(WIN32)

FIND_PACKAGE(PhysFS REQUIRED)
FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(OpenAL REQUIRED)
FIND_PACKAGE(Freetype REQUIRED)
FIND_PACKAGE(PNG REQUIRED)
FIND_PACKAGE(VorbisFile REQUIRED)

# Use SDL on non-Apple unixes
IF(UNIX AND NOT APPLE)
    FIND_PACKAGE(SDL REQUIRED)
ENDIF(UNIX AND NOT APPLE)

FIND_LIBRARY(VORBISFILE_LIBRARY NAMES vorbisfile)

# platform specific include directories for win and sdl
IF(MSVC)
    ADD_DEFINITIONS(/D_UNICODE /DUNICODE)
    INCLUDE_DIRECTORIES(${PolyCode_SOURCE_DIR}/Core/Build/MSVC/Polycore)
ELSEIF(APPLE)
    ADD_DEFINITIONS(-DGL_GLEXT_PROTOTYPES)
ELSE(MSVC)
    ADD_DEFINITIONS(-DGL_GLEXT_PROTOTYPES)
    INCLUDE_DIRECTORIES(${PolyCode_SOURCE_DIR}/Core/Build/Linux)
ENDIF(MSVC)

INCLUDE_DIRECTORIES(
    ${PolyCode_SOURCE_DIR}/Core/Contents/Include
    ${OPENGL_INCLUDE_DIR}
    ${OPENAL_INCLUDE_DIR}
    ${FREETYPE_INCLUDE_DIRS}
)

ADD_SUBDIRECTORY(Core/Contents)

IF(POLYCODE_BUILD_BINDINGS)
    FIND_PACKAGE(Lua51 REQUIRED)
    ADD_SUBDIRECTORY(Bindings/Contents)
ENDIF(POLYCODE_BUILD_BINDINGS)

IF(POLYCODE_BUILD_EXAMPLES)
    ADD_SUBDIRECTORY(Examples/C++)
ENDIF(POLYCODE_BUILD_EXAMPLES)

IF(POLYCODE_BUILD_MODULES)
    FIND_PACKAGE(Box2D)
    FIND_PACKAGE(Bullet)
    ADD_SUBDIRECTORY(Modules/Contents)
ENDIF(POLYCODE_BUILD_MODULES)

IF(POLYCODE_BUILD_PLAYER)
    ADD_SUBDIRECTORY(Player/Contents)
ENDIF(POLYCODE_BUILD_PLAYER)

IF(POLYCODE_BUILD_TOOLS)
    ADD_SUBDIRECTORY(Tools/Contents)
ENDIF(POLYCODE_BUILD_TOOLS)
